import React from "react";

import { Tester } from "../tester/tester";

const DivideAndConquer2 = () => {
  /*
    Примеры:
    fibonacci(1) // 0
    fibonacci(2) // 1
    fibonacci(13) // 144

    Задача из learn.javascript.ru

    Последовательность чисел Фибоначчи определяется формулой Fn = Fn-1 + Fn-2. То есть, следующее число получается как сумма двух предыдущих.

    Первые два числа равны 1, затем 2(1+1), затем 3(1+2), 5(2+3) и так далее: 1, 1, 2, 3, 5, 8, 13, 21....

    Числа Фибоначчи тесно связаны с золотым сечением и множеством природных явлений вокруг нас.

    Напишите функцию fib(n) которая возвращает n-е число Фибоначчи.

    Пример работы:

    function fib(n) {  ваш код  }

    alert(fib(3)); // 2
    alert(fib(7)); // 13
    alert(fib(77)); // 5527939700884757
    P.S. Все запуски функций из примера выше должны работать быстро. Вызов fib(77) должен занимать не более доли секунды.

    */

  const fib = (n) => {
    return n - 1 + (n - 2);
  };

  return (
    <div>
      <h1>Пример</h1>
      <p>
        Посмотрим на ещё одну классическую и простую для рекурсивного решения
        задачу: функция для получения числа из последовательности Фибоначчи по
        индексу. Первое её число — 0, второе — 1, а каждое последующее — сумма
        двух предыдущих.
      </p>
      <Tester result={fib(1)} answer={0} />
      {/* <Tester result={0} answer={1} />
      <Tester result={0} answer={144} />
      <Tester result={0} answer={2} />
      <Tester result={0} answer={13} />
      <Tester result={0} answer={5527939700884757} /> */}
    </div>
  );
};

export { DivideAndConquer2 };
